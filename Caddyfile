{
  # Caddyfile para domínio finance.ronieruas.com.br com proxy para frontend e backend
  # HTTP habilitado para Cloudflare Tunnel (sem redirecionamento automático)
  auto_https off
  admin off
}

# Configuração HTTP para Cloudflare Tunnel (sem redirecionamento)
:80 {
  encode zstd gzip

  # Cabeçalhos de segurança aprimorados (sem HSTS para HTTP)
  header {
    X-Content-Type-Options nosniff
    X-Frame-Options DENY
    X-XSS-Protection "1; mode=block"
    Referrer-Policy strict-origin-when-cross-origin
    Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=()"
    Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'"
    -Server
  }

  # Matchers para rotas de API (preservando paths)
  @auth path /auth/*
  @accounts path /accounts/*
  @expenses path /expenses/*
  @incomes path /incomes/*
  @creditCards path /creditCards/*
  @budgets path /budgets/*
  @transfers path /transfers/*
  @analytics path /analytics/*
  @resumo path /resumo/*
  @dashboard path /dashboard/*
  @users path /users/*
  @notifications path /notifications*
  @export path /export/*
  @billClosing path /bill-closing/*

  # Rotas de monitoramento com Cloudflare Access
  @monitoring path /uptime-kuma/* /grafana/* /prometheus/*
  handle @monitoring {
    # Headers para Cloudflare Access
    header {
      CF-Access-Authenticated-User-Email {http.request.header.CF-Access-Authenticated-User-Email}
      CF-Access-JWT-Assertion {http.request.header.CF-Access-JWT-Assertion}
    }
    
    # Uptime Kuma
    @uptime path /uptime-kuma/*
    handle @uptime {
      uri strip_prefix /uptime-kuma
      reverse_proxy uptime-kuma:3001 {
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
      }
    }
    
    # Grafana
    @grafana path /grafana/*
    handle @grafana {
      uri strip_prefix /grafana
      reverse_proxy grafana:3000 {
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
      }
    }
    
    # Prometheus (apenas para debug, normalmente não exposto)
    @prometheus path /prometheus/*
    handle @prometheus {
      uri strip_prefix /prometheus
      reverse_proxy prometheus:9090 {
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
      }
    }
  }
  @api path /api/*
  handle @api {
    uri strip_prefix /api
    reverse_proxy finance-backend:3001 {
      header_up X-Real-IP {remote}
      header_up X-Forwarded-For {remote}
      header_up X-Forwarded-Proto {scheme}
    }
  }

  handle @auth {
    reverse_proxy finance-backend:3001
  }
  handle @accounts {
    reverse_proxy finance-backend:3001
  }
  handle @expenses {
    reverse_proxy finance-backend:3001
  }
  handle @incomes {
    reverse_proxy finance-backend:3001
  }
  handle @creditCards {
    reverse_proxy finance-backend:3001
  }
  handle @budgets {
    reverse_proxy finance-backend:3001
  }
  handle @transfers {
    reverse_proxy finance-backend:3001
  }
  handle @analytics {
    reverse_proxy finance-backend:3001
  }
  handle @resumo {
    reverse_proxy finance-backend:3001
  }
  handle @dashboard {
    reverse_proxy finance-backend:3001
  }
  handle @users {
    reverse_proxy finance-backend:3001
  }
  handle @notifications {
    reverse_proxy finance-backend:3001
  }
  handle @export {
    reverse_proxy finance-backend:3001
  }
  handle @billClosing {
    reverse_proxy finance-backend:3001
  }

  # Healthcheck simples
  @health path /health /server-test
  handle @health {
    reverse_proxy finance-backend:3001
  }

  # SPA: tudo que não for API vai para o frontend
  handle {
    reverse_proxy finance-frontend:80 {
      header_up Host {host}
      header_up X-Real-IP {remote}
      flush_interval -1
    }
  }
}
# Dockerfile para frontend React
FROM node:18-alpine AS builder

# Definir diretório de trabalho
WORKDIR /app

# Copiar arquivos de dependências
COPY frontend/package*.json ./

# Instalar dependências com otimizações
RUN npm ci --only=production --no-audit --no-fund --prefer-offline --cache /tmp/.npm

# Copiar código fonte
COPY frontend/. .

# Build da aplicação
RUN npm run build

# Estágio de produção
FROM nginx:alpine

# Instalar tzdata para garantir timezone correto nos logs
RUN apk update && apk add --no-cache tzdata \
  && ln -sf /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime \
  && echo "America/Sao_Paulo" > /etc/timezone

# Copiar arquivos buildados
COPY --from=builder /app/build /usr/share/nginx/html

# Copiar configuração do nginx
COPY frontend/nginx.conf /etc/nginx/conf.d/default.conf

# Expor porta 80
EXPOSE 80

# Comando para iniciar nginx
CMD ["nginx", "-g", "daemon off;"]
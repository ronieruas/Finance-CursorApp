version: '3.8'

services:
  # Uptime Kuma - Monitoramento de disponibilidade
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: finance-uptime-kuma
    restart: unless-stopped
    environment:
      TZ: ${TZ:-America/Sao_Paulo}
    volumes:
      - uptime_kuma_data:/app/data
    networks:
      - monitoring-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3001 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus - Coleta de métricas
  prometheus:
    image: prom/prometheus:latest
    container_name: finance-prometheus
    restart: unless-stopped
    environment:
      TZ: ${TZ:-America/Sao_Paulo}
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - monitoring-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Grafana - Visualização de métricas
  grafana:
    image: grafana/grafana:latest
    container_name: finance-grafana
    restart: unless-stopped
    environment:
      TZ: ${TZ:-America/Sao_Paulo}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: false
      GF_SECURITY_DISABLE_GRAVATAR: true
      GF_ANALYTICS_REPORTING_ENABLED: false
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - monitoring-network
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Loki - Agregação de logs
  loki:
    image: grafana/loki:latest
    container_name: finance-loki
    restart: unless-stopped
    environment:
      TZ: ${TZ:-America/Sao_Paulo}
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./monitoring/loki.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    networks:
      - monitoring-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'

  # Promtail - Coleta de logs
  promtail:
    image: grafana/promtail:latest
    container_name: finance-promtail
    restart: unless-stopped
    environment:
      TZ: ${TZ:-America/Sao_Paulo}
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./monitoring/promtail.yml:/etc/promtail/config.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitoring-network
    depends_on:
      - loki
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'

volumes:
  uptime_kuma_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local

networks:
  monitoring-network:
    driver: bridge
    external: false